function r(){return r=Object.assign||function(u){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(u[a]=e[a])}return u},r.apply(this,arguments)}const c={byUuid:"byUuid",byName:"byName",byNameExact:"byNameExact",byCodec:"byCodec",byCodexExact:"byCodecExact",byCountry:"byCountry",byCountryExact:"byCountryExact",byCountryCodeExact:"byCountryCodeExact",byState:"byState",byStateExact:"byStateExact",byLanguage:"byLanguage",byLanguageExact:"byLanguageExact",byTag:"byTag",byTagExact:"byTagExact"};class h{constructor(t,e=!0){if(this.appName=void 0,this.hideBroken=void 0,this.baseUrl=void 0,this.fetchConfig={method:"GET",redirect:"follow"},this.appName=t,this.hideBroken=e,!t)throw new Error("appName is required");this.fetchConfig.headers={"user-agent":this.appName}}async resolveBaseUrl(t={}){let e;const a=await fetch("http://all.api.radio-browser.info/json/servers",t);if(a.ok)return e=await a.json(),e;throw a}setBaseUrl(t){this.baseUrl=t}getBaseUrl(){return this.baseUrl}async getCountries(t,e,a){return this.runRequest(this.buildRequest("countries",t,e),a)}async getCountryCodes(t,e,a){return t=t?`${t.toUpperCase()}`:"",this.runRequest(this.buildRequest("countrycodes",t,e),a)}async getCodecs(t,e){return this.runRequest(this.buildRequest("codecs","",t),e)}async getCountryStates(t,e,a){return this.runRequest(this.buildRequest("states",t,e),a)}async getLanguages(t,e,a){return this.runRequest(this.buildRequest("languages",t,e),a)}async getTags(t,e,a){return t=t?t.toLowerCase():"",this.runRequest(this.buildRequest("tags",t,e),a)}async getStationsBy(t,e,a,i,s=!1){if(!c[t])throw new Error(`search type does not exist: ${t}`);e=e?e.toLowerCase():"";const n=await this.runRequest(this.buildRequest(`stations/${t.toLowerCase()}`,e,a),i);return this.normalizeStations(n,s)}normalizeStations(t,e=!1){const a=[],i={};for(const s of t){if(e){const o=`${s.name.toLowerCase().trim()}${s.url.toLowerCase().trim()}`;if(i[o])continue;i[o]=!0}const n={changeId:s.changeuuid,id:s.stationuuid,name:s.name,url:s.url,urlResolved:s.url_resolved,homepage:s.homepage,favicon:s.favicon,country:s.country,countryCode:s.countrycode,state:s.state,votes:s.votes,codec:s.codec,bitrate:s.bitrate,clickCount:s.clickcount,clickTrend:s.clicktrend,hls:!!s.hls,lastCheckOk:!!s.lastcheckok,lastChangeTime:new Date(s.lastchangetime),lastCheckOkTime:new Date(s.lastcheckoktime),clickTimestamp:new Date(s.clicktimestamp),lastLocalCheckTime:new Date(s.lastlocalchecktime),language:s.language.split(","),lastCheckTime:new Date(s.lastchecktime),geoLat:s.geo_lat,geoLong:s.geo_long,tags:Array.from(new Set(s.tags.split(","))).filter(o=>o.length>0&&o.length<10)};a.push(n)}return a}async getAllStations(t,e,a=!1){const i=await this.runRequest(this.buildRequest("stations","",t),e);return this.normalizeStations(i,a)}async searchStations(t,e,a=!1){const i=await this.runRequest(this.buildRequest("stations/search",void 0,t),e);return this.normalizeStations(i,a)}async getStationsByClicks(t,e){return this.resolveGetStations("topclick",t,e)}async getStationsByVotes(t,e){return this.resolveGetStations("topvote",t,e)}async getStationsByRecentClicks(t,e){return this.resolveGetStations("lastclick",t,e)}async sendStationClick(t,e){return this.runRequest(this.buildRequest("url",t,void 0,!1),e)}async voteForStation(t,e){return this.runRequest(this.buildRequest("vote",t),e)}async getStationsById(t,e){const a=t.join(","),i=await this.runRequest(this.buildRequest(`stations/byuuid?uuids=${a}`,void 0,void 0,!1),e);return this.normalizeStations(i)}async getStationByUrl(t,e){const a=await this.runRequest(this.buildRequest(`stations/byurl/${t}`,void 0,void 0,!1),e);return this.normalizeStations(a)}async resolveGetStations(t,e,a){const i=e?`/${e}`:"",s=await this.runRequest(this.buildRequest(`stations/${t}${i}`,void 0,void 0,!1),a);return this.normalizeStations(s)}buildRequest(t,e,a,i=!0){let s;return e=e?`/${encodeURIComponent(e)}`:"",a&&(s=r({},a),"tagList"in s&&Array.isArray(s.tagList)&&(s.tagList=[...s.tagList]),i&&s.hideBroken===void 0&&(s.hideBroken=this.hideBroken)),`${t}${e}${s?this.createQueryParams(s):""}`}async runRequest(t,e={}){const a=r({},this.fetchConfig,e,{headers:r({},this.fetchConfig.headers,e.headers)});if(!this.baseUrl){const s=await this.resolveBaseUrl(),n=Math.floor(Math.random()*s.length);this.baseUrl=`https://${s[n].name}`}const i=await fetch(`${this.baseUrl}/json/${t}`,a);if(i.ok)return i.json();throw i}createQueryParams(t){let e="";if(t)for(const[a,i]of Object.entries(t)){let s=a.toLowerCase();switch(s){case"hasgeoinfo":s="has_geo_info";break;case"hidebroken":s="hidebroken";break;case"taglist":s="tagList"}e+=`&${s}=${encodeURIComponent(i)}`}return e.length?`?${e.slice(1)}`:""}}h.version="6.0.1";export{h as a};
